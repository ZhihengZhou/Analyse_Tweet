Sys.getenv("LANG")
install.packages("wordnet")
library(coreNLP)
require(rJava)
require(coreNLP)
initCoreNLP()
install.packages("rJava", type = "sources")
install.packages("rJava", type = "sources")
install.packages("rJava", type = "sources")
install.packages("rJava", type = "sources")
update.packages("rJava", type = "sources")
Sys.getenv("JAVA_HOME")
Sys.setenv(JAVA_HOME = '/Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home')
Sys.getenv("JAVA_HOME")
Sys.setenv(LD_LIBRARY_PATH = '$LD_LIBRARY_PATH:$JAVA_HOME/lib')
Sys.getenv("LD_LIBRARY_PATH")
require(rJava)
require(coreNLP)
initCoreNLP()
downloadCoreNLP()
initCoreNLP()
library(wordnet)
setDict("/Users/tusm/Desktop/ANU/COMP4560/wordnet/WordNet-3.0/dict")
require(wordnet)
myList <- list(1,4,6)
returnObject <- lapply(myList,function(x){
x + 10
})
initCoreNLP()
initCoreNLP()
downloadCoreNLP()
initCoreNLP()
update.packages("rJava", type = "sources")
install.packages("rJava", type = "sources")
install.packages("rJava", type = "sources")
Sys.getenv("LD_LIBRARY_PATH")
install.packages("rJava", type = "sources")
install.packages("rJava", type = "sources")
install.packages("rJava", type = "sources")
install.packages("rJava", type = "sources")
require(coreNLP)
initCoreNLP()
require(rJava)
> require(coreNLP)
require(coreNLP)
require(rJava)
sessionInfo()
Sys.getenv("LD_LIBRARY_PATH")
Sys.setenv(LD_LIBRARY_PATH=paste0(Sys.getenv("LD_LIBRARY_PATH"), ":", "/Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/lib/server/" ))
Sys.getenv("LD_LIBRARY_PATH")
library(coreNLP)
initCoreNLP()
Sys.getenv("LD_LIBRARY_PATH")
library(coreNLP)
initCoreNLP()
downloadCoreNLP()
devtools::install_github("statsmaths/coreNLP")
coreNLP::downloadCoreNLP()
install.packages("devtools", type = "sources")
install_github("statsmaths/coreNLP")
devtools::install_github("statsmaths/coreNLP")
install.packages("devtools")
install.packages("rJava")
install.packages("rJava")
devtools::install_github("statsmaths/coreNLP")
coreNLP::downloadCoreNLP()
library(coreNLP)
initCoreNLP()
install.packages("rJava")
install.packages("rJava")
initCoreNLP()
library(coreNLP)
initCoreNLP()
require(coreNLP)
require(coreNLP)
install.packages("coreNLP")
install.packages("coreNLP")
library(coreNLP)
require(rJava)
require(coreNLP)
initCoreNLP()
downloadCoreNLP()
initCoreNLP()
require(coreNLP)
initCoreNLP()
sessionInfo()
initCoreNLP("/Users/tusm/Movies/stanford-corenlp-full-2017-06-09")
initCoreNLP("/Users/tusm/Movies/stanford-corenlp-full-2017-06-09")
initCoreNLP("/Users/tusm/Movies/stanford-corenlp-full-2017-06-09")
Sys.getenv("LD_LIBRARY_PATH")
Sys.getenv("LANG")
Sys.setenv(LANG = 'en')
require(rJava)
initCoreNLP()
require(coreNLP)
require(coreNLP)
install.packages("coreNLP")
require(coreNLP)
require(rJava)
#coreNLP
library(coreNLP)
# wordnet
library(wordnet)
install.packages("wordnet")
# wordnet
library(wordnet)
# wordnet
library(wordnet)
# wordnet
library(wordnet)
require(coreNLP)
sessionInfo()
Sys.getenv("JAVA_HOME")
warnings()
require(coreNLP)
require(coreNLP)
#coreNLP
library(coreNLP)
require(coreNLP)
require(rJava)
sessionInfo()
initCoreNLP()
downloadCoreNLP()
initCoreNLP("/Users/tusm/Movies/stanford-corenlp-full-2017-06-09")
downloadCoreNLP()
initCoreNLP()
sIn <- "My hovercraft is full of happy eels"
getSentiment(annotateString(sIn))
require(coreNLP)
initCoreNLP()
sIn <- "My hovercraft is full of happy eels"
getSentiment(annotateString(sIn))
sIn <- "I am happy"
getSentiment(annotateString(sIn))
sIn <- "开心"
getSentiment(annotateString(sIn))
initCoreNLP(type = "english")
initCoreNLP(type = "english")
version
install.packages("rtweet")
require(rtweet)
rt <- search_tweets(
"#rstats", n = 18000, include_rts = FALSE
)
version
library(rtweet)
library(rtweet)
install.packages("rtweet")
library(rtweet)
#Create tweet API token
create_token(
app = "my_twitter_research_app",
consumer_key = "G3MQONk4InSpaEbLEEii83NeR",
consumer_secret = "sjhQId8edr4nSkccyDiwJwogA6vqHoGDkqGSnTXNCnlQ8kpvkM",
access_token = "875178186383835137-iVunpJKrBqGdP9o59zICU20wzU4mwyD",
access_secret = "ypOqFVOYtuwbXQZ9875iKUAZ7ijtRATFPbnZ6GgnC7MhL")
# Loading function
source("./Auto_Search_Base.R")
setwd("~/Desktop/Work/Src")
# Loading function
source("./Auto_Search_Base.R")
# Set paremeters
query = "monster"
search_amount_once = 5
search_interval = 10
total_duration = as.difftime(1, units = "mins")
# Run search function
auto_search_tweets(query = query,
search_amount_once = search_amount_once,
search_interval = search_interval,
total_duration = total_duration)
read_df <- read.csv("../Data/monster_2018-09-14 11/30/00_1.csv")
read_df <- read.csv("../Data/monster_2018-09-14 11:30:00_1.csv")
ncol(read_df)
colnames(read_df)
c2 = colnames(rt)
c1
c1 = colnames(read_df)
c2 = colnames(rt)
c1
c2
rt <- search_tweets(
"#auspol", n = 100, include_rts = FALSE
)
c2 = colnames(rt)
c2
c1
c1 == c2
# install.packages("rtweet")
install.packages("lmtest")
library("crayon", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
detach("package:rtweet", unload=TRUE)
library(rtweet)
library(rtweet)
detach("package:rtweet", unload=TRUE)
create_token(
app = "my_twitter_research_app",
consumer_key = "XYznzPFO FZR2a39FwWKN1Jp41",
consumer_secret = "CtkGEWmSevZqJuKl6HHrBxbCybxI1xGLqrD5ynPd9jG0SoHZbD",
access_token = "9551451262-wK2EmA942kxZYIwa5LMKZoQA4Xc2uyIiEwu2YXL",
access_secret = "9vpiSGKg1fIPQtxc5d5ESiFlZQpfbknEN1f1m2xe5byw7")
library("rtweet", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
Sys.Date()
setwd("~/Desktop/Work/Src")
